[project]
name = "ai-powered-migration-validation-system"
version = "0.1.0"
description = "AI-Powered Migration Validation System"
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
dependencies = [
    "pydantic-settings",
    "structlog",
    "fastapi",
    "uvicorn[standard]",
    "SQLAlchemy",
    "alembic",
    "python-dotenv",
    "Pillow", # For image processing in visual_analyzer
    "openai", # For OpenAI LLM provider
    "anthropic", # For Anthropic LLM provider
    "google-generativeai", # For Google LLM provider
]
requires-python = ">=3.9"
readme = "README.md"
license = { text = "MIT" }

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-asyncio",
    "isort",
    "flake8",
    "mypy",
    "bandit",
    "safety",
    "pre-commit",
    "ruff",
]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.isort]
profile = "ruff"
line_length = 99
known_first_party = "src"

[tool.mypy]
python_version = "3.9"
warn_unused_configs = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
strict_optional = true
check_untyped_defs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true

[tool.pytest.ini_options]
python_files = "test_*.py"
addopts = "--strict-markers --strict-config"
asyncio_mode = "auto"

[tool.ruff]
line-length = 99
target-version = "py39"
select = ["E", "F", "W", "C", "N", "D", "I"] # Extend as needed
ignore = ["D100", "D104", "D105", "D107"] # Ignore missing docstrings for modules, functions, classes, methods

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"] # Allow unused imports in __init__.py
