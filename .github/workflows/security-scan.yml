name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run weekly security scans
    - cron: '0 2 * * 1'

jobs:
  security-scan:
    name: Security Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install security tools
      run: |
        pip install bandit[toml] safety semgrep

    - name: Run Bandit security scan
      run: |
        bandit -r src/ -f json -o bandit-report.json || true
        bandit -r src/ -f txt -o bandit-report.txt || true

    - name: Run Safety dependency check
      run: |
        safety check --json --output safety-report.json || true

    - name: Run Gitleaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITLEAKS_VERBOSE: true

    - name: Run Semgrep
      run: |
        semgrep --config=auto --json --output=semgrep-report.json src/ || true

    - name: Generate security summary
      run: |
        echo "## üîí Security Scan Results" >> $GITHUB_STEP_SUMMARY
        echo "### Bandit Results" >> $GITHUB_STEP_SUMMARY
        if [ -f bandit-report.txt ]; then
          echo '```' >> $GITHUB_STEP_SUMMARY
          head -50 bandit-report.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        fi

        echo "### Safety Results" >> $GITHUB_STEP_SUMMARY
        if [ -f safety-report.json ]; then
          echo "Dependency vulnerabilities checked" >> $GITHUB_STEP_SUMMARY
        fi

    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          bandit-report.txt
          safety-report.json
          semgrep-report.json
        retention-days: 30

    - name: Comment PR with security results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');

          let comment = '## üîí Security Scan Results\n\n';

          // Add Bandit results if available
          try {
            const banditReport = fs.readFileSync('bandit-report.txt', 'utf8');
            const lines = banditReport.split('\n');
            const summary = lines.find(line => line.includes('Total issues'));
            if (summary) {
              comment += `**Bandit**: ${summary}\n`;
            }
          } catch (e) {
            comment += '**Bandit**: Scan completed\n';
          }

          comment += '\nüìä Full security reports available in workflow artifacts.';

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  # Fail the build if high severity issues are found
  security-gate:
    name: Security Gate
    runs-on: ubuntu-latest
    needs: security-scan
    if: always()

    steps:
    - name: Download security reports
      uses: actions/download-artifact@v4
      with:
        name: security-reports

    - name: Check for high severity issues
      run: |
        # Check Bandit results for high severity issues
        if [ -f bandit-report.json ]; then
          high_issues=$(jq '.results[] | select(.issue_severity == "HIGH")' bandit-report.json | jq -s length)
          if [ "$high_issues" -gt 0 ]; then
            echo "‚ùå $high_issues HIGH severity security issues found!"
            echo "Please fix high severity issues before merging."
            exit 1
          else
            echo "‚úÖ No high severity issues found"
          fi
        fi