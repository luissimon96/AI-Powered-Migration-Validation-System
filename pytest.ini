[tool:pytest]
# Pytest configuration for AI-Powered Migration Validation System

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output and reporting
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80

# Test markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions  
    behavioral: Behavioral validation tests using CrewAI
    performance: Performance and load tests
    security: Security and vulnerability tests
    slow: Slow running tests (>10 seconds)
    external: Tests requiring external services
    llm: Tests requiring LLM API access

# Async testing
asyncio_mode = auto

# Test filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning

# Minimum version requirements
minversion = 6.0

# Test collection
collect_ignore = [
    "setup.py",
    "docs/*",
    "build/*", 
    "dist/*"

# Coverage settings
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod